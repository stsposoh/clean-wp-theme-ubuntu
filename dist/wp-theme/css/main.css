@font-face {
  font-family: 'latolight';
  src: url("/wp-content/themes/ig-show/fonts/Lato/latolight.woff") format("woff"), url("/wp-content/themes/ig-show/fonts/Lato/latolight.woff2") format("woff2");
}
@font-face {
  font-family: 'latoregular';
  src: url("/wp-content/themes/ig-show/fonts/Lato/latoregular.woff") format("woff"), url("/wp-content/themes/ig-show/fonts/Lato/latoregular.woff2") format("woff2");
}
@font-face {
  font-family: 'latosemibold';
  src: url("/wp-content/themes/ig-show/fonts/Lato/latosemibold.woff") format("woff"), url("/wp-content/themes/ig-show/fonts/Lato/latosemibold.woff2") format("woff2");
}
@font-face {
  font-family: 'latobold';
  src: url("/wp-content/themes/ig-show/fonts/Lato/latobold.woff") format("woff"), url("/wp-content/themes/ig-show/fonts/Lato/latobold.woff2") format("woff2");
}

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
html,
body {
  height: 100%;
}
body {
  position: relative;
  height: 100%;
  margin: 0;
  min-width: 320px;
  font-family: latolight;
  font-size: 14px;
  font-weight: 300;
  color: #000;
  line-height: 20px;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-font-smoothing: antialiased;
  scroll-behavior: smooth;
  background-color: #fff;
}
@media (max-width: 1370px) {
  body {
    font-size: 11px;
    line-height: 15px;
  }
}
@media (max-width: 767px) {
  body {
    padding-right: 0 !important;
  }
}
body p {
  margin-bottom: 21px;
  margin-top: 0;
  letter-spacing: 0.13px;
}
@media (max-width: 1370px) {
  body p {
    margin-bottom: 15px;
    letter-spacing: 0;
  }
}
@media (max-width: 767px) {
  body p {
    margin-bottom: 13px;
    letter-spacing: 0.13px;
  }
}
img {
  max-width: 100%;
  height: auto;
}
*::placeholder {
  color: #747474;
}
*::-webkit-input-placeholder {
  color: #747474;
}
*:-moz-placeholder {
  color: #747474;
}
*::-moz-placeholder {
  color: #747474;
}
*:-ms-input-placeholder {
  color: #747474;
}
body input:focus:required:invalid,
body textarea:focus:required:invalid {
  color: #747474;
}
body input:required:valid,
body textarea:required:valid {
  color: #747474;
}
a {
  -webkit-transition: color 0.3s ease;
  -moz-transition: color 0.3s ease;
  -o-transition: color 0.3s ease;
  -ms-transition: color 0.3s ease;
  transition: color 0.3s ease;
}
a:link {
  color: #000;
  text-decoration: none;
  border: none;
  outline: none;
}
a:visited {
  outline-color: transparent;
  color: #000;
}
a:focus {
  outline-color: transparent;
  border: none;
  outline: none;
}
a:hover {
  color: rgba(0,0,0,0.9);
  text-decoration: none;
}
a:active {
  border: none;
  outline: none;
  color: #747474;
}
.h1,
.h2,
.h3 {
  font-weight: 100;
  margin: 0;
}
.h1 {
  font-size: 54px;
  line-height: 65px;
  font-weight: normal;
  letter-spacing: 0.03em;
}
@media (max-width: 1370px) {
  .h1 {
    font-size: 36px;
    line-height: 43px;
  }
}
@media (max-width: 767px) {
  .h1 {
    font-size: 20px;
    line-height: 24px;
  }
}
.h2 {
  font-size: 54px;
  line-height: 65px;
  letter-spacing: 0.03em;
}
@media (max-width: 1370px) {
  .h2 {
    font-size: 36px;
    line-height: 46px;
  }
}
@media (max-width: 767px) {
  .h2 {
    font-size: 20px;
    line-height: 24px;
  }
}
.h3 {
  font-size: 42px;
  line-height: 50px;
}
@media (max-width: 1370px) {
  .h3 {
    font-size: 28px;
    line-height: 35px;
  }
}
@media (max-width: 767px) {
  .h3 {
    font-size: 20px;
    line-height: 25px;
  }
}


/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
